services:
  config-server:
    build:
      context: ./config-server
    container_name: config-server
    restart: always
    ports:
      - "8888:8888"

  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb:/data

  db:
    image: postgres
    container_name: db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: bookstore
    volumes:
      - db:/data

  eureka-server:
    build:
      context: ./eureka-server
    container_name: eureka-server
    restart: always
    ports:
      - "8761:8761"
    environment:
      CONFIG_SERVER: config-server
    depends_on:
      - config-server

  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    restart: always
    ports:
      - "8080:8080"
    environment:
      CONFIG_SERVER: config-server
      EUREKA_SERVER: eureka-server
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - config-server
      - eureka-server

  catalog-service:
    build:
      context: ./catalog-service
    container_name: catalog-service
    restart: always
    environment:
      MONGO_HOST: mongodb
      CONFIG_SERVER: config-server
      EUREKA_SERVER: eureka-server
    depends_on:
      - config-server
      - eureka-server
      - mongodb
      - api-gateway

  auth-service:
    build:
      context: ./auth-service
    container_name: auth-service
    restart: always
    environment:
      PG_HOST: db
      PG_USER: postgres
      PG_PASSWORD: password
      JWT_SECRET: ${JWT_SECRET}
      CONFIG_SERVER: config-server
      EUREKA_SERVER: eureka-server
    depends_on:
      - config-server
      - eureka-server
      - db
      - api-gateway

  cart-service:
    build:
      context: ./cart-service
    container_name: cart-service
    restart: always
    environment:
      PG_HOST: db
      PG_USER: postgres
      PG_PASSWORD: password
      CONFIG_SERVER: config-server
      EUREKA_SERVER: eureka-server
    depends_on:
      - config-server
      - eureka-server
      - db
      - api-gateway
      - catalog-service

  review-service:
    build:
      context: ./review-service
    container_name: review-service
    restart: always
    environment:
      PG_HOST: db
      PG_USER: postgres
      PG_PASSWORD: password
      CONFIG_SERVER: config-server
      EUREKA_SERVER: eureka-server
    depends_on:
      - config-server
      - eureka-server
      - db
      - api-gateway
      - catalog-service

  notify-report-service:
    build:
      context: ./notify-report-service
    container_name: notify-report-service
    restart: always
    environment:
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      CONFIG_SERVER: config-server
      EUREKA_SERVER: eureka-server
    depends_on:
      - config-server
      - eureka-server
      - api-gateway

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:8080/api
      VITE_PAYPAL_CLIENT_ID: ${VITE_PAYPAL_CLIENT_ID}
    depends_on:
      - api-gateway

volumes:
  mongodb:
  db: